{"version":3,"sources":["webpack:///src/$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/demo-material-module.ts","webpack:///src/app/public/login/login.component.ts","webpack:///src/app/public/login/login.component.html","webpack:///src/app/public/login/login.service.ts","webpack:///src/app/public/public.component.ts","webpack:///src/app/public/public.component.html","webpack:///src/app/service/auth.service.ts","webpack:///src/app/system/branch/add-branch/add-branch.component.ts","webpack:///src/app/system/branch/add-branch/add-branch.component.html","webpack:///src/app/system/branch/branch.component.ts","webpack:///src/app/system/branch/branch.component.html","webpack:///src/app/system/dashboard/dashboard.component.ts","webpack:///src/app/system/dashboard/dashboard.component.html","webpack:///src/app/system/layouts/full/full.component.ts","webpack:///src/app/system/layouts/full/full.component.html","webpack:///src/app/system/layouts/full/header/header.component.ts","webpack:///src/app/system/layouts/full/sidebar/sidebar.component.ts","webpack:///src/app/system/layouts/full/sidebar/sidebar.component.html","webpack:///src/app/system/product/add-product/add-product.component.ts","webpack:///src/app/system/product/add-product/add-product.component.html","webpack:///src/app/system/product/product.component.ts","webpack:///src/app/system/product/product.component.html","webpack:///src/app/system/profile/profile.component.ts","webpack:///src/app/system/profile/profile.component.html","webpack:///src/app/system/shared/accordion/accordion.directive.ts","webpack:///src/app/system/shared/accordion/accordionanchor.directive.ts","webpack:///src/app/system/shared/accordion/accordionlink.directive.ts","webpack:///src/app/system/shared/accordion/index.ts","webpack:///src/app/system/shared/menu-items/menu-items.ts","webpack:///src/app/system/shared/shared.module.ts","webpack:///src/app/system/shared/spinner.component.ts","webpack:///src/app/system/statistics/statistics.component.ts","webpack:///src/app/system/statistics/statistics.component.html","webpack:///src/app/system/system-routing.module.ts","webpack:///src/app/system/system.component.ts","webpack:///src/app/system/system.component.html","webpack:///src/app/system/system.module.ts","webpack:///src/app/utils/auth.ts","webpack:///src/common/utils/alert.ts","webpack:///src/common/utils/index.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","mainRoutes","path","loadChildren","SystemModule","canActivate","PublicModule","redirectTo","pathMatch","AppRoutingModule","forRoot","imports","AppComponent","router","auth","url","window","location","href","console","log","includes","selector","templateUrl","styleUrls","AppModule","provide","useClass","initializeApp","FIREBASE_CONFIG","declarations","providers","bootstrap","DemoMaterialModule","LoginComponent","_loginService","_authService","isLoggedIn","isLoginFailed","getToken","navigateByUrl","token","saveToken","validateUser","login","userName","password","firebaseData","saveUser","user","email","getIdToken","storeFirebaseLoginInfo","toDashBoard","catch","error","errorCode","errorMessage","showError","getInfoUser","subscribe","data","LoginService","afAuth","ngZone","authState","localStorage","setItem","JSON","stringify","parse","currentUser","stsTokenManager","accessToken","getItem","removeItem","signInWithEmailAndPassword","result","signOut","providedIn","PublicComponent","URL","AuthService","http","authService","headers","Headers","httpOptions","post","AddBranchComponent","appearance","isValidAddress","isValidOpenTime","isValidCloseTime","branch","latitude","longitude","address","formatted_address","opensAt","closesAt","validBranch","showSuccess","onAutocompleteSelected","onLocationSelected","validateOpenTime","validateCloseTime","registerBranch","BranchComponent","displayedColumns","branches","dataSource","paginator","sort","event","filterValue","target","value","filter","trim","toLowerCase","firstPage","applyFilter","static","DashboardComponent","FullComponent","changeDetectorRef","media","menuItems","mobileQuery","matchMedia","_mobileQueryListener","detectChanges","addListener","removeListener","AppHeaderComponent","AppSidebarComponent","tokenStorageService","logout","reload","AddProductComponent","dataProductType","dataBranch","dataProduct","ProductComponent","storage","showProductsTable","producttypes","files","products","filterPredicate","dataStr","name","productType","stock","indexOf","obj","selectedBranch","fileUpload","nativeElement","forEach","file","uploadFile","formData","FormData","append","inProgress","onchange","index","length","push","progress","uploadFiles","click","blob","fileName","a","document","createElement","createObjectURL","download","dispatchEvent","MouseEvent","templatePathReference","ref","getDownloadURL","xhr","XMLHttpRequest","responseType","onload","response","p","appendChild","removeChild","open","send","getProductsFromBranch","ProfileComponent","AccordionDirective","navlinks","setTimeout","checkOpenLinks","selectedLink","link","selected","splice","group","routeUrl","currentUrl","split","closeOtherLinks","events","pipe","AccordionAnchorDirective","navlink","toggle","AccordionLinkDirective","nav","addLink","removeGroup","_selected","MENUITEMS","state","type","icon","MenuItems","SharedModule","SpinnerComponent","isSpinnerVisible","backgroundColor","template","encapsulation","None","Document","StatisticsComponent","systemRoutes","component","children","SystemRoutingModule","forChild","SystemComponent","setLocale","GOOGLE_MAPS_CONFIG","parseUrl","MySweetAlert","message","title","fire","text","confirmButtonText","confirmButtonColor","cancelButtonText","cancelButtonColor","environment","production","apiKey","libraries","language","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from \"@angular/core\";\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\nimport { AuthService } from \"./utils/auth\";\r\n\r\n/*const publicRoutes: Routes = [\r\n  { path: \"\", redirectTo: \"login\", pathMatch: \"full\" },\r\n  { path: \"login\", component: LoginComponent },\r\n];*/\r\n\r\nexport const mainRoutes: Routes = [\r\n  {\r\n    path: \"system\",\r\n    loadChildren: () =>\r\n      import(\"./system/system.module\").then((module) => module.SystemModule),\r\n      canActivate: [AuthService],\r\n  },\r\n  {\r\n    path: \"public\",\r\n    loadChildren: () =>\r\n      import(\"./public/public.module\").then((module) => module.PublicModule),\r\n  },\r\n  { path: \"\", redirectTo: \"public/login\", pathMatch: \"full\" },\r\n  { path: \"**\", redirectTo: \"public/login\" },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(mainRoutes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule {}\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: \"app-root\",\r\n  templateUrl: \"./app.component.html\",\r\n  styleUrls: [\"./app.component.css\"],\r\n})\r\nexport class AppComponent implements OnInit {\r\n  auth: boolean = false;\r\n  constructor(public router: Router) {\r\n    const url: string = window.location.href;\r\n    console.log(url)\r\n    if (url.includes(\"login\") || url.includes(\"register\")) {\r\n      this.auth = true;\r\n    }\r\n  }\r\n  ngOnInit(): void {\r\n    console.log('asd')\r\n  }\r\n}\r\n","<!-- ============================================================== -->\r\n<!-- Main wrapper - style you can find in pages.scss -->\r\n<!-- ============================================================== -->\r\n\r\n<router-outlet>\r\n    <div *ngIf=\"!auth\">\r\n        <app-full-layout></app-full-layout>\r\n    </div>\r\n    <app-spinner></app-spinner>\r\n</router-outlet>","\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\r\nimport { LocationStrategy, PathLocationStrategy } from '@angular/common';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\n\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { PublicComponent } from './public/public.component';\r\nimport { LoginComponent } from './public/login/login.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { DemoMaterialModule } from './demo-material-module';\r\n\r\nimport { SystemModule } from \"./system/system.module\";\r\n\r\nimport { SharedModule } from './system/shared/shared.module';\r\nimport { SpinnerComponent } from './system/shared/spinner.component';\r\nimport { MatGoogleMapsAutocompleteModule } from '@angular-material-extensions/google-maps-autocomplete';\r\nimport { NgxMaterialTimepickerModule } from 'ngx-material-timepicker';\r\nimport { AgmCoreModule } from '@agm/core';\r\nimport { AngularFireModule } from 'angularfire2';\r\nimport { AngularFireAuth } from 'angularfire2/auth';\r\nimport { AngularFireStorageModule } from 'angularfire2/storage';\r\nimport { environment } from '../environments/environment';\r\nimport { AuthService } from './utils/auth';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    PublicComponent,\r\n    LoginComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    DemoMaterialModule,\r\n    FormsModule,\r\n    FlexLayoutModule,\r\n    HttpClientModule,\r\n    SharedModule,\r\n    AppRoutingModule,\r\n    SystemModule,\r\n    AngularFireModule.initializeApp(environment.FIREBASE_CONFIG),\r\n    AngularFireStorageModule,\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: LocationStrategy,\r\n      useClass: PathLocationStrategy\r\n    },\r\n    AngularFireAuth,AuthService\r\n  ],\r\n\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {NgModule} from '@angular/core';\r\nimport {\r\n  MatAutocompleteModule,\r\n  MatButtonModule,\r\n  MatButtonToggleModule,\r\n  MatCardModule,\r\n  MatCheckboxModule,\r\n  MatChipsModule,\r\n  MatDatepickerModule,\r\n  MatDialogModule,\r\n  MatExpansionModule,\r\n  MatFormFieldModule,\r\n  MatGridListModule,\r\n  MatIconModule,\r\n  MatInputModule,\r\n  MatListModule,\r\n  MatMenuModule,\r\n  MatPaginatorModule,\r\n  MatProgressBarModule,\r\n  MatProgressSpinnerModule,\r\n  MatRadioModule,\r\n  MatSelectModule,\r\n  MatSidenavModule,\r\n  MatSliderModule,\r\n  MatSlideToggleModule,\r\n  MatSnackBarModule,\r\n  MatSortModule,\r\n  MatTableModule,\r\n  MatTabsModule,\r\n  MatToolbarModule,\r\n  MatTooltipModule,\r\n  MatStepperModule,\r\n} from '@angular/material';\r\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material';\r\nimport {CdkTableModule} from '@angular/cdk/table';\r\nimport {CdkAccordionModule} from '@angular/cdk/accordion';\r\nimport {A11yModule} from '@angular/cdk/a11y';\r\nimport {BidiModule} from '@angular/cdk/bidi';\r\nimport {OverlayModule} from '@angular/cdk/overlay';\r\nimport {PlatformModule} from '@angular/cdk/platform';\r\nimport {ObserversModule} from '@angular/cdk/observers';\r\nimport {PortalModule} from '@angular/cdk/portal';\r\n\r\n/**\r\n * NgModule that includes all Material modules that are required to serve the demo-app.\r\n */\r\n@NgModule({\r\n  exports: [\r\n    MatAutocompleteModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatTableModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatExpansionModule,\r\n    MatFormFieldModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    MatRippleModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatSlideToggleModule,\r\n    MatSliderModule,\r\n    MatSnackBarModule,\r\n    MatSortModule,\r\n    MatStepperModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n    MatNativeDateModule,\r\n    CdkTableModule,\r\n    A11yModule,\r\n    BidiModule,\r\n    CdkAccordionModule,\r\n    ObserversModule,\r\n    OverlayModule,\r\n    PlatformModule,\r\n    PortalModule,\r\n  ]\r\n})\r\nexport class DemoMaterialModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { LoginService } from './login.service';\r\nimport { MySweetAlert } from '../../../common/utils';\r\nimport { AuthService } from '../../service/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss'],\r\n  providers: [LoginService]\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  public userName: string;\r\n  public password: string;\r\n  isLoggedIn = false;\r\n  isLoginFailed = false;\r\n\r\n  constructor(\r\n    private  _loginService:  LoginService,\r\n    private _authService: AuthService,\r\n    private router: Router\r\n    ) { }\r\n\r\n  ngOnInit(): void {\r\n    console.log(this._loginService.getToken())\r\n    if (this._loginService.getToken()) {\r\n      this.isLoggedIn=true;\r\n      this.router.navigateByUrl('/system/branch');\r\n    }\r\n  }\r\n\r\n  storeFirebaseLoginInfo(token) {\r\n    this._loginService.saveToken(token);\r\n    this.validateUser();\r\n  }\r\n\r\n  login() {\r\n    this._loginService.login(this.userName, this.password)\r\n    .then(firebaseData => {\r\n      this._loginService.saveUser(firebaseData.user.email);\r\n      firebaseData.user.getIdToken().then(token => {\r\n          this.storeFirebaseLoginInfo(token)\r\n        }\r\n      );\r\n      this.toDashBoard();\r\n      \r\n    }).catch(error => {\r\n      if (error.code) {\r\n        this.isLoginFailed = true;\r\n        const errorCode = error.code;\r\n        let errorMessage = '';\r\n        switch (errorCode) {\r\n          case 'auth/wrong-password': errorMessage = 'La contraseña es incorrecta o el usuario aún no cuenta con una contraseña'; break;\r\n          case 'auth/invalid-email': errorMessage = 'La dirección de correo no cumple con el formato'; break;\r\n          case 'auth/user-not-found': errorMessage = 'No existe un usuario asociado a esta cuenta de correo'; break;\r\n          default: errorMessage = 'Ocurrió un error inesperado. Contacte con el administrador'; break;\r\n        }\r\n        MySweetAlert.showError(errorMessage);\r\n      } else {\r\n        MySweetAlert.showError('Ocurrió un error inesperado. Contacte con el administrador');\r\n      }\r\n    });\r\n  }\r\n\r\n  toDashBoard() {\r\n    this.router.navigateByUrl('/system/branch');\r\n  }\r\n\r\n\r\n  validateUser() {\r\n    this._authService.getInfoUser().subscribe(\r\n      data => {\r\n        console.log('data: ', data);\r\n        this.isLoginFailed = false;\r\n        this.isLoggedIn=true;\r\n      }\r\n    );\r\n  }\r\n}\r\n","<div class=\"example-login\" *ngIf=\"!isLoggedIn\">        \r\n    <div class=\"login-wrapper\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n    <mat-card class = \"box \">\r\n        <div class=\"mat-card-header-text\">\r\n            <mat-card-header class = \"mat-card-header-display\">\r\n                <mat-card-title class=\"mat-card-title\" >Clinic App</mat-card-title>\r\n            </mat-card-header>\r\n        </div>\r\n        <mat-card-content class=\"mat-card-content-login\" >\r\n            <div >\r\n                <form >\r\n                    <div>\r\n                        <mat-form-field class=\"full-width\">\r\n                            <mat-label>Usuario</mat-label>\r\n                            <input id=\"userName\" name=\"userName\" matInput [(ngModel)]=\"userName\" required>\r\n                        </mat-form-field>\r\n                    </div>\r\n                    <div>\r\n                        <mat-form-field class=\"full-width\">\r\n                            <mat-label>Contraseña</mat-label>\r\n                            <input id=\"password\" name=\"password\" matInput type=\"password\" [(ngModel)]=\"password\" required>\r\n                        </mat-form-field>\r\n                    </div>\r\n                    <div>\r\n                        <button class=\"btn-block-login\" mat-raised-button color=\"primary\" value=\"Iniciar Sesión\" (click)=\"login()\">\r\n                            Iniciar Sesión\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </mat-card-content>\r\n    </mat-card>\r\n    </div>\r\n</div>\r\n","import { Injectable,NgZone } from '@angular/core';\r\nimport { auth } from 'firebase/app';\r\nimport { AngularFireAuth } from '@angular/fire/auth';\r\nimport { User } from 'firebase';\r\nimport { Router } from '@angular/router';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoginService {\r\n\r\n  user: User;\r\n  constructor(public  afAuth:  AngularFireAuth,private router: Router,public ngZone: NgZone) {\r\n    this.afAuth.authState.subscribe(user => {\r\n      if (user){\r\n        this.user = user;\r\n        localStorage.setItem('user', JSON.stringify(this.user));\r\n        localStorage.setItem('token', JSON.parse(JSON.stringify(this.afAuth.auth.currentUser)).stsTokenManager.accessToken);\r\n      } else {\r\n        localStorage.setItem('user', null);\r\n        JSON.parse(localStorage.getItem('user'));\r\n      }\r\n    });\r\n  }\r\n  public getToken(): string {\r\n    return localStorage.getItem('token');\r\n  }\r\n  public saveToken(token: string) {\r\n    localStorage.removeItem('token');\r\n    localStorage.setItem('token', token);\r\n  }\r\n  public saveUser(user) {\r\n    localStorage.removeItem('user');\r\n    localStorage.setItem('user', JSON.stringify(user));\r\n  }\r\n\r\n  async login(email: string, password: string) {\r\n    const result = await this.afAuth.auth.signInWithEmailAndPassword(email, password);\r\n    this.router.navigateByUrl('/system/branch');\r\n    return result;\r\n  }\r\n\r\n  async logout() {\r\n    await this.afAuth.auth.signOut();\r\n    localStorage.removeItem('user');\r\n    localStorage.removeItem('token');\r\n    const user = JSON.parse(localStorage.getItem('user'));\r\n    return user === null;\r\n  }\r\n\r\n  get isLoggedIn(): boolean {\r\n    const user = JSON.parse(localStorage.getItem('user'));\r\n    return (user !== null)? true : false;\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n@Component({\r\n  selector: 'app-public',\r\n  templateUrl: './public.component.html',\r\n  styleUrls: ['./public.component.scss']\r\n})\r\nexport class PublicComponent implements OnInit {\r\n\r\n  constructor(private router: Router) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}","<router-outlet></router-outlet>","import { Injectable } from '@angular/core';\r\nimport { LoginService } from '../public/login/login.service';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nconst URL = 'http://localhost:8080/identity/authentication';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n\r\n  headers = new Headers();\r\n\r\n  constructor(\r\n    public http: HttpClient,\r\n    public authService: LoginService\r\n  ) {\r\n  \r\n   }\r\n\r\n   getInfoUser(): Observable<any> {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type':  'application/json',\r\n        'Authorization': 'Bearer ' + localStorage.getItem(\"token\"),\r\n        'X-Platform': 'WEB'\r\n      })\r\n    };\r\n     return this.http.post(URL, null, httpOptions);\r\n   }\r\n\r\n}\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport {\r\n  Appearance,\r\n  Location,\r\n} from \"@angular-material-extensions/google-maps-autocomplete\";\r\nimport PlaceResult = google.maps.places.PlaceResult;\r\nimport { IBranch } from \"../../../../common/types\";\r\nimport { MySweetAlert } from \"../../../../common/utils\";\r\n\r\n@Component({\r\n  selector: \"app-add-branch\",\r\n  templateUrl: \"./add-branch.component.html\",\r\n  styleUrls: [\"./add-branch.component.scss\"],\r\n})\r\nexport class AddBranchComponent implements OnInit {\r\n  public appearance = Appearance;\r\n  public zoom: number;\r\n\r\n  public branch: IBranch;\r\n\r\n  public isValidAddress: boolean = false;\r\n  public isValidOpenTime: boolean = false;\r\n  public isValidCloseTime: boolean = false;\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {\r\n    this.branch = {\r\n      latitude: -12.119164,\r\n      longitude: -77.029203,\r\n    };\r\n  }\r\n\r\n  onAutocompleteSelected(result: PlaceResult) {\r\n    this.branch.address = result.formatted_address;\r\n    //this.address = result.formatted_address;\r\n    this.isValidAddress = true;\r\n    console.log(\"Result: \", result);\r\n  }\r\n\r\n  onLocationSelected(location: Location) {\r\n    this.branch.latitude = location.latitude;\r\n    this.branch.longitude = location.longitude;\r\n  }\r\n\r\n  validateOpenTime() {\r\n    if (this.branch.opensAt) {\r\n      this.isValidOpenTime = true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  validateCloseTime() {\r\n    if (this.branch.closesAt) {\r\n      this.isValidCloseTime = true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  registerBranch() {\r\n    if (this.validBranch()) {\r\n      MySweetAlert.showSuccess(\"La sucursal ha sido agregada con éxito\");\r\n    } else {\r\n      MySweetAlert.showError(\"Por favor, complete los campos obligatorios\");\r\n    }\r\n  }\r\n\r\n  validBranch(): boolean {\r\n    if (this.isValidAddress && this.isValidOpenTime && this.isValidCloseTime) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n}\r\n","<mat-card>\r\n        <mat-card-content>\r\n            <div>\r\n                <div>\r\n                    <mat-card-title>Agregar local</mat-card-title>\r\n                     <mat-card-subtitle>Agrega un nuevo local a tu empresa</mat-card-subtitle> \r\n                 </div>\r\n            </div>\r\n            <div>\r\n                <form>\r\n                    <div fxLayout=\"row wrap\">\r\n                        <mat-form-field class=\"full-width p-10\" [appearance]=\"'standard'\">\r\n                            <mat-label>Dirección del local</mat-label>\r\n                            <input  name=\"address\"\r\n                                    matInput\r\n                                    matValidateAddress\r\n                                    matGoogleMapsAutocomplete\r\n                                    #matGoogleMapsAutocomplete=\"matGoogleMapsAutocomplete\"\r\n                                    placeholder=\"'Selecciona la ubicación'\"\r\n                                    class=\"form-control\"\r\n                                    [country]=\"'pe'\"\r\n                                    [types]=\"['address']\"\r\n                                    [(ngModel)]=\"branch.address\"\r\n                                    (onAutocompleteSelected)=\"onAutocompleteSelected($event)\"\r\n                                    (onLocationSelected)=\"onLocationSelected($event)\"\r\n                                    required>\r\n                            <mat-error *ngIf=\"matGoogleMapsAutocomplete.addressSearchControl.hasError('required')\">\r\n                                <span>La dirección es requerida</span>\r\n                            </mat-error>\r\n                            <mat-error *ngIf=\"matGoogleMapsAutocomplete.addressSearchControl.hasError('validateAddress')\">\r\n                                <span>La dirección es inválida</span>\r\n                            </mat-error>\r\n                        </mat-form-field>\r\n                    </div>\r\n                    <div>\r\n                        <agm-map  [latitude]=\"branch.latitude\" [longitude]=\"branch.longitude\" [zoom]=\"14\" [scrollwheel]=\"null\" [gestureHandling]=\"'cooperative'\">\r\n                            <agm-marker [latitude]=\"branch.latitude\" [longitude]=\"branch.longitude\"></agm-marker>\r\n                        </agm-map>\r\n                    </div>\r\n                    <div fxLayout=\"row wrap\">\r\n                        <!-- column -->    \r\n                        <div fxFlex.gt-lg=\"50\" fxFlex.gt-md=\"50\" fxFlex.gt-xs=\"100\" fxFlex=\"100\">\r\n                            <mat-form-field class=\"full-width p-10 ngx-material-timepicker-example__form-group\">\r\n                                <mat-label>Hora de apertura</mat-label>\r\n                                <input name=\"opensAt\" matInput required [ngxTimepicker]=\"opensAt\" [(ngModel)]=\"branch.opensAt\" (ngModelChange)=\"validateOpenTime()\" readonly>\r\n                                <ngx-material-timepicker #opensAt [defaultTime]=\"'08:00 am'\"></ngx-material-timepicker>\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div fxFlex.gt-lg=\"50\" fxFlex.gt-md=\"50\" fxFlex.gt-xs=\"100\" fxFlex=\"100\">\r\n                            <mat-form-field class=\"full-width p-10 ngx-material-timepicker-example__form-group\">\r\n                                <mat-label>Hora de cierre</mat-label>\r\n                                <input name=\"closesAt\" matInput required [ngxTimepicker]=\"closesAt\" [(ngModel)]=\"branch.closesAt\" (ngModelChange)=\"validateCloseTime()\" readonly>\r\n                                <ngx-material-timepicker #closesAt [defaultTime]=\"'10:00 pm'\"></ngx-material-timepicker>\r\n                            </mat-form-field>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"buttons-footer\">\r\n                        <div class=\"pull-right\">\r\n                            <button mat-raised-button color=\"primary\" value=\"Registrar\" (click)=\"registerBranch()\">Registrar</button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n                \r\n            </div>\r\n            \r\n\r\n        </mat-card-content>\r\n    </mat-card>\r\n","import {Component, OnInit, ViewChild} from '@angular/core';\r\n\r\nimport * as Chartist from 'chartist';\r\nimport { ChartType, ChartEvent } from 'ng-chartist';\r\n\r\nimport {MatPaginator} from '@angular/material/paginator';\r\nimport {MatSort} from '@angular/material/sort';\r\nimport {MatTableDataSource} from '@angular/material/table';\r\n\r\ndeclare var require: any;\r\n\r\nconst data: any = require('./data.json');\r\n\r\nexport interface BranchData {\r\n\tid: number;\r\n\tname: string;\r\n\taddress: string;\r\n\tschedule: string;\r\n  }\r\n\r\n@Component({\r\n\tselector: 'app-branch',\r\n\ttemplateUrl: './branch.component.html',\r\n\tstyleUrls: ['./branch.component.scss']\r\n})\r\nexport class BranchComponent implements OnInit  {\r\n\r\n\tdisplayedColumns: string[] = ['name', 'address', 'schedule', 'status', 'star'];\r\n  \tdataSource: MatTableDataSource<BranchData>;\r\n\r\n\t@ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\r\n\t@ViewChild(MatSort, {static: true}) sort: MatSort;\r\n\r\n\tconstructor() {\r\n\t\tconst branches = data;\r\n\r\n\t\t// Assign the data to the data source for the table to render\r\n\t\tthis.dataSource = new MatTableDataSource(branches);\r\n\t}\r\n\r\n\tngOnInit() {\r\n\t\tthis.dataSource.paginator = this.paginator;\r\n\t\tthis.dataSource.sort = this.sort;\r\n\t}\r\n\r\n\tapplyFilter(event: Event) {\r\n\t\tconst filterValue = (event.target as HTMLInputElement).value;\r\n\t\tthis.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n\t\tif (this.dataSource.paginator) {\r\n\t\t\tthis.dataSource.paginator.firstPage();\r\n\t\t}\r\n\t}\r\n\t\r\n}\r\n","<mat-card>\r\n    <mat-card-content>\r\n        <div>\r\n            <div>\r\n                <mat-card-title>Locales</mat-card-title>\r\n                 <mat-card-subtitle>Lista de locales registrados</mat-card-subtitle> \r\n             </div>\r\n            <div>\r\n                <mat-form-field>\r\n                    <mat-label>Filtro</mat-label>\r\n                    <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Busque un local\">\r\n                </mat-form-field>\r\n                <div class=\"mat-elevation-z8 m-t-10\">\r\n                    <button class=\"pull-right\" mat-mini-fab [routerLink]=\"['/system/addbranch']\" [matTooltipPosition]=\"'above'\" matTooltip=\"Agregar local\">\r\n                        <mat-icon>add_to_queue</mat-icon>\r\n                    </button>\r\n                    <table mat-table [dataSource]=\"dataSource\" matSort>\r\n                        <!-- Name Column -->\r\n                        <ng-container matColumnDef=\"name\">\r\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Local </th>\r\n                        <td mat-cell *matCellDef=\"let row\"> {{row.name}} </td>\r\n                        </ng-container>\r\n                    \r\n                        <!-- Address Column -->\r\n                        <ng-container matColumnDef=\"address\">\r\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Dirección </th>\r\n                        <td mat-cell *matCellDef=\"let row\"> {{row.address}} </td>\r\n                        </ng-container>\r\n                    \r\n                        <!-- Schedule Column -->\r\n                        <ng-container matColumnDef=\"schedule\">\r\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Horario </th>\r\n                        <td mat-cell *matCellDef=\"let row\"> {{row.schedule}} </td>\r\n                        </ng-container>\r\n                    \r\n                        <!-- Status Column -->\r\n                        <ng-container matColumnDef=\"status\">\r\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Estado </th>\r\n                        <td mat-cell *matCellDef=\"let row\" [style.color]=\"row.color\"> {{row.status}} </td>\r\n                        </ng-container>\r\n\r\n                        <!-- Star Column -->\r\n                        <ng-container matColumnDef=\"star\">\r\n                        <th mat-header-cell *matHeaderCellDef class=\"text-center\"> Acciones </th>\r\n                        <td mat-cell *matCellDef=\"let row\">\r\n                            <button mat-button class=\"m-l-5\" *ngIf=\"row.status === 'Disponible'\" [matTooltipPosition]=\"'above'\" matTooltip=\"Deshabilitar\">\r\n                                <mat-icon>not_interested</mat-icon> </button>\r\n                            <button mat-button class=\"m-l-5\" *ngIf=\"row.status === 'Deshabilitado'\" [matTooltipPosition]=\"'above'\" matTooltip=\"Habilitar\">\r\n                                <mat-icon>power_settings_new</mat-icon> </button>\r\n                            <button mat-button [matTooltipPosition]=\"'above'\" class=\"m-l-5\" matTooltip=\"Editar\">\r\n                                <mat-icon>edit</mat-icon> </button>\r\n                            <button mat-button [matTooltipPosition]=\"'above'\" class=\"m-l-5\" matTooltip=\"Eliminar\">\r\n                                <mat-icon>delete_forever</mat-icon> </button>\r\n                        </td>\r\n                        </ng-container>\r\n                    \r\n                        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\">\r\n                        </tr>\r\n                    </table>\r\n                    \r\n                    <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\r\n                    </div>\r\n            </div>\r\n        </div>\r\n    </mat-card-content>\r\n</mat-card>","import { Component, AfterViewInit } from '@angular/core';\r\n\r\ndeclare var require: any;\r\n\r\nconst data: any = require('./data.json');\r\n\r\n@Component({\r\n\tselector: 'app-dashboard',\r\n\ttemplateUrl: './dashboard.component.html',\r\n\tstyleUrls: ['./dashboard.component.scss']\r\n})\r\nexport class DashboardComponent implements AfterViewInit {\r\n\tngAfterViewInit() {}\r\n\r\n\t\r\n}\r\n","<p>dashboard works!</p>","import * as $ from 'jquery';\r\nimport { MediaMatcher } from '@angular/cdk/layout';\r\nimport { Router } from '@angular/router';\r\nimport {\r\n  ChangeDetectorRef,\r\n  Component,\r\n  NgZone,\r\n  OnDestroy,\r\n  ViewChild,\r\n  HostListener,\r\n  Directive,\r\n  AfterViewInit\r\n} from '@angular/core';\r\nimport { MenuItems } from '../../shared/menu-items/menu-items';\r\n\r\n/** @title Responsive sidenav */\r\n@Component({\r\n  selector: 'app-full-layout',\r\n  templateUrl: 'full.component.html',\r\n  styleUrls: []\r\n})\r\nexport class FullComponent implements OnDestroy, AfterViewInit {\r\n  mobileQuery: MediaQueryList;\r\n\r\n  private _mobileQueryListener: () => void;\r\n\r\n  constructor(\r\n    changeDetectorRef: ChangeDetectorRef,\r\n    media: MediaMatcher,\r\n    public menuItems: MenuItems\r\n  ) {\r\n    this.mobileQuery = media.matchMedia('(min-width: 768px)');\r\n    this._mobileQueryListener = () => changeDetectorRef.detectChanges();\r\n    this.mobileQuery.addListener(this._mobileQueryListener);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.mobileQuery.removeListener(this._mobileQueryListener);\r\n  }\r\n  ngAfterViewInit() {}\r\n}\r\n","<!-- ============================================================== -->\r\n<!-- Main wrapper - style you can find in pages.scss -->\r\n<!-- ============================================================== -->\r\n<div class=\"main-container\"> \r\n    <!-- ============================================================== -->\r\n    <!-- Topbar - style you can find in header.scss -->\r\n    <!-- ============================================================== -->\r\n    <mat-toolbar color=\"primary\" class=\"topbar telative\">\r\n        <!-- ============================================================== -->\r\n        <!-- Logo - style you can find in header.scss -->\r\n        <!-- ============================================================== -->\r\n        <div class=\"navbar-header\">\r\n            <a class=\"navbar-brand\" href=\"index.html\">\r\n                <!-- Logo icon --><b>\r\n                    <!--You can put here icon as well // <i class=\"wi wi-sunset\"></i> //-->\r\n                    <!-- Dark Logo icon -->\r\n                    <img src=\"assets/images/logo-icon.png\" alt=\"homepage\" class=\"dark-logo\">\r\n                    <!-- Light Logo icon -->\r\n                    <img src=\"assets/images/logo-light-icon.png\" alt=\"homepage\" class=\"light-logo\">\r\n                </b>\r\n                <!--End Logo icon -->\r\n                <!-- Logo text -->\r\n                <span fxShow=\"false\" fxShow.gt-xs>\r\n                 <!-- dark Logo text -->\r\n                 <img src=\"assets/images/logo-text.png\" alt=\"homepage\" class=\"dark-logo\">\r\n                 <!-- Light Logo text -->    \r\n                 <img src=\"assets/images/logo-light-text.png\" class=\"light-logo\" alt=\"homepage\">\r\n                </span> </a>\r\n        </div>\r\n        <!-- ============================================================== -->\r\n        <!-- sidebar toggle -->\r\n        <!-- ============================================================== -->\r\n        \r\n        <button mat-icon-button (click)=\"snav.toggle()\" value=\"sidebarclosed\">\r\n            <mat-icon>menu</mat-icon>\r\n        </button>\r\n        <span fxFlex></span>\r\n        <!-- ============================================================== -->\r\n        <!-- app header component - style you can find in header.scss / header.component.ts-->\r\n        <!-- ============================================================== -->\r\n        <app-header></app-header>\r\n    </mat-toolbar>\r\n    <!-- ============================================================== -->\r\n    <!-- End Topbar - style you can find in pages.scss -->\r\n    <!-- ============================================================== -->\r\n    <mat-sidenav-container class=\"example-sidenav-container\" [style.marginTop.px]=\"mobileQuery.matches ? 0 : 0\">\r\n        <!-- ============================================================== -->\r\n        <!-- Sidebar - style you can find in sidebar.scss -->\r\n        <!-- ============================================================== -->\r\n        <mat-sidenav #snav id=\"snav\" class=\"dark-sidebar pl-xs\" [mode]=\"mobileQuery.matches ? 'side' : 'over'\" fixedTopGap=\"0\" [opened]=\"mobileQuery.matches\" [disableClose]=\"mobileQuery.matches\"  >\r\n            \r\n                <app-sidebar></app-sidebar>\r\n               \r\n            \r\n        </mat-sidenav>\r\n        <!-- ============================================================== -->\r\n        <!-- Sidebar - style you can find in sidebar.scss -->\r\n        <!-- ============================================================== -->\r\n        \r\n        <!-- ============================================================== -->\r\n        <!-- Page container - style you can find in pages.scss -->\r\n        <!-- ============================================================== -->\r\n        <mat-sidenav-content class=\"page-wrapper\">\r\n                 \r\n                <div class=\"page-content\">\r\n                   \r\n                        <router-outlet><app-spinner></app-spinner></router-outlet>\r\n                    \r\n                </div>    \r\n               \r\n        </mat-sidenav-content>\r\n        <!-- ============================================================== -->\r\n        <!-- Page container - style you can find in pages.scss -->\r\n        <!-- ============================================================== -->\r\n    </mat-sidenav-container>\r\n</div>","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: []\r\n})\r\nexport class AppHeaderComponent {}\r\n","import {\r\n  ChangeDetectorRef,\r\n  Component,\r\n  NgZone,\r\n  OnDestroy,\r\n  ViewChild,\r\n  HostListener,\r\n  Directive,\r\n  AfterViewInit\r\n} from '@angular/core';\r\nimport { MediaMatcher } from '@angular/cdk/layout';\r\nimport { MenuItems } from '../../../shared/menu-items/menu-items';\r\nimport { LoginService } from '../../../../public/login/login.service';\r\n\r\n@Component({\r\n  selector: 'app-sidebar',\r\n  templateUrl: './sidebar.component.html',\r\n  styleUrls: []\r\n})\r\nexport class AppSidebarComponent implements OnDestroy {\r\n  mobileQuery: MediaQueryList;\r\n\r\n  private _mobileQueryListener: () => void;\r\n\r\n  constructor(\r\n    changeDetectorRef: ChangeDetectorRef,\r\n    media: MediaMatcher,\r\n    public menuItems: MenuItems,\r\n    private tokenStorageService: LoginService,\r\n  ) {\r\n    this.mobileQuery = media.matchMedia('(min-width: 768px)');\r\n    this._mobileQueryListener = () => changeDetectorRef.detectChanges();\r\n    this.mobileQuery.addListener(this._mobileQueryListener);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.mobileQuery.removeListener(this._mobileQueryListener);\r\n  }\r\n  logout() {\r\n    this.tokenStorageService.logout();\r\n    window.location.reload();\r\n  }\r\n}\r\n","<!-- ============================================================== -->\r\n<!-- sidebar -->\r\n<!-- ============================================================== -->\r\n <div class=\"user-profile\" style=\"background: url(assets/images/background/user-info.jpg) no-repeat;\">\r\n    <!-- User profile image -->\r\n    <div class=\"profile-img\"> <img src=\"assets/images/users/profile.png\" alt=\"user\"> </div>\r\n    <!-- User profile text-->\r\n    <!-- ============================================================== -->\r\n    <!-- Profile - style you can find in header.scss -->\r\n    <!-- ============================================================== -->\r\n    <div class=\"profile-text\"><a [matMenuTriggerFor]=\"sdprofile\" class=\"\"> Markarn Doe <i class=\"ti-angle-down font-12 m-l-5\"></i></a></div>\r\n    <mat-menu #sdprofile=\"matMenu\" class=\"mymegamenu\">\r\n        <button mat-menu-item>\r\n            <mat-icon>settings</mat-icon> Settings </button>\r\n        <button mat-menu-item>\r\n            <mat-icon>account_box</mat-icon> Profile </button>\r\n        <button mat-menu-item>\r\n            <mat-icon>notifications_off</mat-icon> Disable notifications </button>\r\n        <button mat-menu-item (click)=\"logout()\" >\r\n            <mat-icon>exit_to_app</mat-icon  > Sign Out </button>\r\n    </mat-menu>\r\n    \r\n</div>\r\n<mat-nav-list appAccordion>\r\n    <mat-list-item appAccordionLink *ngFor=\"let menuitem of menuItems.getMenuitem()\" routerLinkActive=\"selected\" group=\"{{menuitem.state}}\">\r\n        <a class=\"\" appAccordionToggle [routerLink]=\"['/system/', menuitem.state]\" *ngIf=\"menuitem.type === 'link'\">\r\n            <mat-icon>{{ menuitem.icon }}</mat-icon> \r\n            <span>{{ menuitem.name }}</span> \r\n            <span fxFlex></span> \r\n            <span class=\"label label-{{ badge.type }}\" *ngFor=\"let badge of menuitem.badge\">{{ badge.value }}</span> \r\n        </a>\r\n\r\n        \r\n    </mat-list-item>\r\n\r\n</mat-nav-list>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-add-product',\r\n  templateUrl: './add-product.component.html',\r\n  styleUrls: ['./add-product.component.scss']\r\n})\r\nexport class AddProductComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>add-product works!</p>\r\n","import { Component, OnInit, ViewChild, ElementRef} from '@angular/core';\r\nimport { BranchData } from '../branch/branch.component';\r\nimport { MatTableDataSource } from '@angular/material';\r\n\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\n\r\nimport { AngularFireStorage } from 'angularfire2/storage';\r\n\r\ndeclare var require: any;\r\n\r\nconst dataProductType: any = require('./data-product-type.json');\r\nconst dataBranch: any = require('app/system/branch/data.json');\r\nconst dataProduct: any = require('./data-product.json');\r\n\r\nexport interface ProductTypeData{\r\n    id: number;\r\n    name: string;\r\n}\r\n\r\nexport interface ProductData{\r\n    id: number;\r\n    name: string;\r\n    code: string;\r\n    stock: number;\r\n    productType: ProductTypeData;\r\n    branch: BranchData;\r\n    \r\n}\r\n\r\n@Component({\r\n  selector: 'app-product',\r\n  templateUrl: './product.component.html',\r\n  styleUrls: ['./product.component.scss']\r\n})\r\nexport class ProductComponent implements OnInit {\r\n\r\n  displayedColumns: string[] = ['code', 'name', 'productType', 'stock', 'star'];\r\n  showProductsTable: boolean = false;\r\n  selectedBranch: any;\r\n  dataSource: MatTableDataSource<ProductData>;\r\n\r\n  producttypes: ProductTypeData[] = dataProductType;\r\n  branches: BranchData[] = dataBranch;\r\n\r\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\r\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\r\n  @ViewChild('fileUpload', {static: false}) fileUpload: ElementRef;files  = [];  \r\n\r\n  constructor(private storage: AngularFireStorage) {\r\n      const products = dataProduct;\r\n      this.dataSource = new MatTableDataSource(products);\r\n      this.dataSource.filterPredicate = (data, filter) => {\r\n        const dataStr = data.code + data.name + data.productType.name + data.stock;\r\n        return dataStr.toLowerCase().indexOf(filter) !== -1;\r\n      };\r\n   }\r\n   \r\n  ngOnInit(): void {\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  getProductsFromBranch(obj) {\r\n    console.log('$event', obj.value);\r\n    this.selectedBranch = obj.value;\r\n    this.showProductsTable = true;\r\n  }\r\n\r\n  private uploadFiles() {\r\n    this.fileUpload.nativeElement.value = ''\r\n    this.files.forEach(file => {\r\n      this.uploadFile(file);\r\n    });\r\n  }\r\n\r\n  uploadFile(file) {\r\n    const formData = new FormData();\r\n    formData.append('file', file.data);\r\n    file.inProgress = true;\r\n    console.log('formData: ', formData);\r\n    /*\r\n    this.uploadService.upload(formData).pipe(\r\n      map(event => {\r\n        switch (event.type) {\r\n          case HttpEventType.UploadProgress:\r\n            file.progress = Math.round(event.loaded * 100 / event.total);\r\n            break;\r\n          case HttpEventType.Response:\r\n            return event;\r\n        }\r\n      }),\r\n      catchError((error: HttpErrorResponse) => {\r\n        file.inProgress = false;\r\n        return of(`${file.data.name} upload failed.`);\r\n      })).subscribe((event: any) => {\r\n        if (typeof (event) === 'object') {\r\n          console.log(event.body);\r\n        }\r\n      });\r\n    */\r\n  }\r\n\r\n  importProducts() {\r\n    const fileUpload = this.fileUpload.nativeElement; \r\n    fileUpload.onchange = () => {\r\n      for (let index = 0; index < fileUpload.files.length; index++) {\r\n        const file = fileUpload.files[index];\r\n        this.files.push({ data: file, inProgress: false, progress: 0});\r\n      }\r\n      this.uploadFiles();\r\n    };\r\n    fileUpload.click();\r\n  }\r\n\r\n  saveBlob(blob, fileName) {\r\n    const a = document.createElement('a');\r\n    a.href = window.URL.createObjectURL(blob);\r\n    a.download = fileName;\r\n    a.dispatchEvent(new MouseEvent('click'));\r\n}\r\n\r\n  downloadTemplate() {\r\n    console.log('downloading template');\r\n    // Create a reference with an initial file path and name\r\n    const storage = this.storage;\r\n    const templatePathReference = storage.ref('templates/add_medicines_template.xlsx');\r\n\r\n    templatePathReference.getDownloadURL().subscribe(url => {\r\n      console.log('url: ', url);\r\n      const xhr = new XMLHttpRequest();\r\n      xhr.responseType = 'blob';\r\n      xhr.onload = function(event) {\r\n        // Gets file in blob format\r\n        const blob = xhr.response;\r\n        // Creates and element to download the file\r\n        const p = document.createElement('p');\r\n        const a = document.createElement('a');\r\n        p.appendChild(a);\r\n        a.href = window.URL.createObjectURL(blob);\r\n        a.download = 'plantilla_agregar_productos.xlsx';\r\n        a.dispatchEvent(new MouseEvent('click'));\r\n        // Removes an element from the document\r\n        p.removeChild(a);\r\n      };\r\n      xhr.open('GET', url);\r\n      xhr.send();\r\n    });\r\n\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n\t\tconst filterValue = (event.target as HTMLInputElement).value;\r\n\t\tthis.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n\t\tif (this.dataSource.paginator) {\r\n\t\t\tthis.dataSource.paginator.firstPage();\r\n\t\t}\r\n\t}\r\n\r\n}\r\n","<mat-card>\r\n    <mat-card-content>\r\n        <div>\r\n            <div>\r\n                <mat-card-title>Productos</mat-card-title>\r\n                <mat-card-subtitle>Lista de Productos</mat-card-subtitle> \r\n            </div>\r\n            <div>\r\n                <mat-form-field class=\"full-width p-b-0\">\r\n                    <mat-label>Seleccione una farmacia</mat-label>\r\n                    <mat-select (selectionChange)=\"getProductsFromBranch($event)\">\r\n                        <mat-option *ngFor = \"let branch of branches\" [value] = \"branch\">\r\n                        {{branch.name}}\r\n                        </mat-option>\r\n                    </mat-select>\r\n                </mat-form-field>\r\n            </div>\r\n            <div *ngIf=\"showProductsTable\">\r\n                <div class=\"m-t-20\">\r\n                    <mat-form-field>\r\n                        <mat-label>Filtro</mat-label>\r\n                        <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Busque un producto\">\r\n                    </mat-form-field>\r\n                </div>\r\n                <div class=\"mat-elevation-z8\" style=\"margin-top: 40px;\">\r\n                    <div>\r\n                        <button class=\"pull-right\" mat-mini-fab [routerLink]=\"['/system/addproduct']\" [matTooltipPosition]=\"'above'\" matTooltip=\"Agregar producto\">\r\n                            <mat-icon>add_shopping_cart</mat-icon>\r\n                        </button>\r\n                        <button class=\"pull-right\" mat-mini-fab (click)=\"importProducts()\" [matTooltipPosition]=\"'above'\" matTooltip=\"Importar productos\">\r\n                            <mat-icon>file_copy</mat-icon>\r\n                        </button>\r\n                        <button class=\"pull-right\" mat-mini-fab (click)=\"downloadTemplate()\" [matTooltipPosition]=\"'above'\" matTooltip=\"Descargar formato\">\r\n                            <mat-icon>archive</mat-icon>\r\n                        </button>\r\n                        <input type=\"file\" #fileUpload id=\"fileUpload\" name=\"fileUpload\" accept=\".csv, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\" style=\"display:none;\" />\r\n                    </div>\r\n                    <table mat-table [dataSource] = \"dataSource\" matSort style=\"table-layout: fixed; width:100%;\">\r\n\r\n                        <!-- Code Column -->\r\n                        <ng-container matColumnDef=\"code\" style= \"margin-left: 75%;\">\r\n                            <th mat-header-cell *matHeaderCellDef mat-sort-header> Codigo </th>\r\n                            <td mat-cell *matCellDef=\"let row\"> {{row.code}} </td>\r\n                        </ng-container>\r\n\r\n                        <!-- Name Column -->\r\n                        <ng-container matColumnDef=\"name\" style= \"margin-right: 75%;\">\r\n                            <th mat-header-cell *matHeaderCellDef mat-sort-header> Nombre </th>\r\n                            <td mat-cell *matCellDef=\"let row\"> {{row.name}} </td>\r\n                        </ng-container>\r\n\r\n                        <!-- ProductType Column -->\r\n                        <ng-container matColumnDef=\"productType\">\r\n                            <th mat-header-cell *matHeaderCellDef mat-sort-header> Tipo </th>\r\n                            <td mat-cell *matCellDef=\"let row\"> {{row.productType.name}} </td>\r\n                        </ng-container>\r\n\r\n                        <!-- Stock Column -->\r\n                        <ng-container matColumnDef=\"stock\">\r\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Stock </th>\r\n                        <td mat-cell *matCellDef=\"let row\"> {{row.stock}} </td>\r\n                        </ng-container>\r\n\r\n                        <!-- Branch Column -->\r\n                        <!--\r\n                        <ng-container matColumnDef=\"branch\">\r\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Local </th>\r\n                        <td mat-cell *matCellDef=\"let row\"> {{row.branch.name}} </td>\r\n                        </ng-container>\r\n                        -->\r\n\r\n                        <!-- Star Column -->\r\n                        <ng-container matColumnDef=\"star\">\r\n                            <th mat-header-cell *matHeaderCellDef class=\"text-center\"> Acciones </th>\r\n                            <td mat-cell *matCellDef=\"let row\" class=\"text-center\">\r\n                                <button mat-button [routerLink]=\"['/edit_product']\" [matTooltipPosition]=\"'above'\" class=\"m-l-5\" matTooltip=\"Editar\">\r\n                                    <mat-icon>edit</mat-icon> </button>\r\n                                <button mat-button [matTooltipPosition]=\"'above'\" class=\"m-l-5\" matTooltip=\"Eliminar\">\r\n                                    <mat-icon>delete_forever</mat-icon> </button>\r\n                            </td>\r\n                        </ng-container>\r\n\r\n                        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\">\r\n                        </tr>\r\n                    </table>\r\n                    <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </mat-card-content>\r\n</mat-card>","import { Component, AfterViewInit } from '@angular/core';\r\n\r\n\r\n@Component({\r\n\tselector: 'app-profile',\r\n\ttemplateUrl: './profile.component.html',\r\n\tstyleUrls: ['./profile.component.scss']\r\n})\r\nexport class ProfileComponent implements AfterViewInit {\r\n\tngAfterViewInit() {}\r\n\r\n\t\r\n}\r\n","<mat-card>\r\n    <mat-card-content>\r\n        <div>\r\n            <div>\r\n                <mat-card-title>Profile</mat-card-title>\r\n            </div>\r\n        </div>\r\n    </mat-card-content>\r\n</mat-card>\r\n","import {\r\n  Directive,\r\n  OnInit,\r\n  AfterViewInit,\r\n  AfterContentChecked\r\n} from '@angular/core';\r\nimport { Router, NavigationEnd } from '@angular/router';\r\n\r\nimport { AccordionLinkDirective } from './accordionlink.directive';\r\nimport { filter } from 'rxjs/operators';\r\n\r\n@Directive({\r\n  selector: '[appAccordion]'\r\n})\r\nexport class AccordionDirective implements AfterContentChecked {\r\n  protected navlinks: Array<AccordionLinkDirective> = [];\r\n\r\n  closeOtherLinks(selectedLink: AccordionLinkDirective): void {\r\n    this.navlinks.forEach((link: AccordionLinkDirective) => {\r\n      if (link !== selectedLink) {\r\n        link.selected = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  addLink(link: AccordionLinkDirective): void {\r\n    this.navlinks.push(link);\r\n  }\r\n\r\n  removeGroup(link: AccordionLinkDirective): void {\r\n    const index = this.navlinks.indexOf(link);\r\n    if (index !== -1) {\r\n      this.navlinks.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  checkOpenLinks() {\r\n    this.navlinks.forEach((link: AccordionLinkDirective) => {\r\n      if (link.group) {\r\n        const routeUrl = this.router.url;\r\n        const currentUrl = routeUrl.split('/');\r\n        if (currentUrl.indexOf(link.group) > 0) {\r\n          link.selected = true;\r\n          this.closeOtherLinks(link);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  ngAfterContentChecked(): void {\r\n    this.router.events\r\n      .pipe(filter(event => event instanceof NavigationEnd))\r\n      .subscribe(e => this.checkOpenLinks());\r\n  }\r\n\r\n  constructor(private router: Router) {\r\n    setTimeout(() => this.checkOpenLinks());\r\n  }\r\n}\r\n","import { Directive, HostListener, Inject } from '@angular/core';\r\n\r\nimport { AccordionLinkDirective } from './accordionlink.directive';\r\n\r\n@Directive({\r\n  selector: '[appAccordionToggle]'\r\n})\r\nexport class AccordionAnchorDirective {\r\n  protected navlink: AccordionLinkDirective;\r\n\r\n  constructor(@Inject(AccordionLinkDirective) navlink: AccordionLinkDirective) {\r\n    this.navlink = navlink;\r\n  }\r\n\r\n  @HostListener('click', ['$event'])\r\n  onClick(e: any) {\r\n    this.navlink.toggle();\r\n  }\r\n}\r\n","import {\r\n  Directive,\r\n  HostBinding,\r\n  Inject,\r\n  Input,\r\n  OnInit,\r\n  OnDestroy\r\n} from '@angular/core';\r\n\r\nimport { AccordionDirective } from './accordion.directive';\r\n\r\n@Directive({\r\n  selector: '[appAccordionLink]'\r\n})\r\nexport class AccordionLinkDirective implements OnInit, OnDestroy {\r\n  @Input()\r\n  public group: any;\r\n\r\n  @HostBinding('class.selected')\r\n  @Input()\r\n  get selected(): boolean {\r\n    return this._selected;\r\n  }\r\n\r\n  set selected(value: boolean) {\r\n    this._selected = value;\r\n    if (value) {\r\n      this.nav.closeOtherLinks(this);\r\n    }\r\n  }\r\n\r\n  protected _selected: boolean;\r\n  protected nav: AccordionDirective;\r\n\r\n  constructor(@Inject(AccordionDirective) nav: AccordionDirective) {\r\n    this.nav = nav;\r\n  }\r\n\r\n  ngOnInit(): any {\r\n    this.nav.addLink(this);\r\n  }\r\n\r\n  ngOnDestroy(): any {\r\n    this.nav.removeGroup(this);\r\n  }\r\n\r\n  toggle(): any {\r\n    this.selected = !this.selected;\r\n  }\r\n}\r\n","export * from './accordionanchor.directive';\r\nexport * from './accordionlink.directive';\r\nexport * from './accordion.directive';\r\n","import { Injectable } from '@angular/core';\r\n\r\nexport interface Menu {\r\n  state: string;\r\n  name: string;\r\n  type: string;\r\n  icon: string;\r\n}\r\n\r\nconst MENUITEMS = [\r\n  { state: 'branch', type: 'link', name: 'Locales', icon: 'store_mall_directory'},\r\n  { state: 'product', type: 'link', name: 'Productos', icon: 'local_pharmacy'},\r\n  { state: 'statistics', type: 'link', name: 'Estadísticas', icon: 'view_list'},\r\n  { state: 'profile', type: 'link', name: 'Perfil', icon: 'person'},\r\n  { state: 'dashboard', name: 'Dashboard', type: 'link', icon: 'av_timer' },\r\n  // { state: 'button', type: 'link', name: 'Buttons', icon: 'crop_7_5' },\r\n  // { state: 'grid', type: 'link', name: 'Grid List', icon: 'view_comfy' },\r\n  // { state: 'lists', type: 'link', name: 'Lists', icon: 'view_list' },\r\n  // { state: 'menu', type: 'link', name: 'Menu', icon: 'view_headline' },\r\n  // { state: 'tabs', type: 'link', name: 'Tabs', icon: 'tab' },\r\n  // { state: 'stepper', type: 'link', name: 'Stepper', icon: 'web' },\r\n  // { state: 'expansion', type: 'link', name: 'Expansion Panel', icon: 'vertical_align_center' },\r\n  // { state: 'chips', type: 'link', name: 'Chips', icon: 'vignette' },\r\n  // { state: 'toolbar', type: 'link', name: 'Toolbar', icon: 'voicemail' },\r\n  // { state: 'progress-snipper', type: 'link', name: 'Progress snipper', icon: 'border_horizontal' },\r\n  // { state: 'progress', type: 'link', name: 'Progress Bar', icon: 'blur_circular' },\r\n  // { state: 'dialog', type: 'link', name: 'Dialog', icon: 'assignment_turned_in'},\r\n  // { state: 'tooltip', type: 'link', name: 'Tooltip', icon: 'assistant' },\r\n  // { state: 'snackbar', type: 'link', name: 'Snackbar', icon: 'adb' },\r\n  // { state: 'slider', type: 'link', name: 'Slider', icon: 'developer_mode' },\r\n  // { state: 'slide-toggle', type: 'link', name: 'Slide Toggle', icon: 'all_inclusive'}\r\n];\r\n\r\n@Injectable()\r\nexport class MenuItems {\r\n  getMenuitem(): Menu[] {\r\n    return MENUITEMS;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\n\r\nimport { MenuItems } from './menu-items/menu-items';\r\nimport { AccordionAnchorDirective, AccordionLinkDirective, AccordionDirective } from './accordion';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AccordionAnchorDirective,\r\n    AccordionLinkDirective,\r\n    AccordionDirective\r\n  ],\r\n  exports: [\r\n    AccordionAnchorDirective,\r\n    AccordionLinkDirective,\r\n    AccordionDirective\r\n   ],\r\n  providers: [ MenuItems ]\r\n})\r\nexport class SharedModule { }\r\n","import {\r\n  Component,\r\n  Input,\r\n  OnDestroy,\r\n  Inject,\r\n  ViewEncapsulation\r\n} from '@angular/core';\r\nimport {\r\n  Router,\r\n  NavigationStart,\r\n  NavigationEnd,\r\n  NavigationCancel,\r\n  NavigationError\r\n} from '@angular/router';\r\nimport { DOCUMENT } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-spinner',\r\n  template: `<div class=\"preloader\" *ngIf=\"isSpinnerVisible\">\r\n        <div class=\"spinner\">\r\n          <div class=\"double-bounce1\"></div>\r\n          <div class=\"double-bounce2\"></div>\r\n        </div>\r\n    </div>`,\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class SpinnerComponent implements OnDestroy {\r\n  public isSpinnerVisible = true;\r\n\r\n  @Input()\r\n  public backgroundColor = 'rgba(0, 115, 170, 0.69)';\r\n\r\n  constructor(\r\n    private router: Router,\r\n    @Inject(DOCUMENT) private document: Document\r\n  ) {\r\n    this.router.events.subscribe(\r\n      event => {\r\n        if (event instanceof NavigationStart) {\r\n          this.isSpinnerVisible = true;\r\n        } else if (\r\n          event instanceof NavigationEnd ||\r\n          event instanceof NavigationCancel ||\r\n          event instanceof NavigationError\r\n        ) {\r\n          this.isSpinnerVisible = false;\r\n        }\r\n      },\r\n      () => {\r\n        this.isSpinnerVisible = false;\r\n      }\r\n    );\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.isSpinnerVisible = false;\r\n  }\r\n}\r\n","import { Component, AfterViewInit } from '@angular/core';\r\n\r\ndeclare var require: any;\r\n\r\n\r\n@Component({\r\n\tselector: 'app-statistics',\r\n\ttemplateUrl: './statistics.component.html',\r\n\tstyleUrls: ['./statistics.component.scss']\r\n})\r\nexport class StatisticsComponent implements AfterViewInit {\r\n\tngAfterViewInit() {}\r\n}\r\n","<p>statistics works!</p>","import { NgModule } from \"@angular/core\";\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\nimport { BranchComponent } from \"./branch/branch.component\";\r\nimport { AddBranchComponent } from \"./branch/add-branch/add-branch.component\";\r\nimport { DashboardComponent } from \"./dashboard/dashboard.component\";\r\nimport { ProductComponent } from \"./product/product.component\";\r\nimport { AddProductComponent } from \"./product/add-product/add-product.component\";\r\nimport { StatisticsComponent } from \"./statistics/statistics.component\";\r\nimport { FullComponent } from './layouts/full/full.component'\r\nimport { ProfileComponent } from './profile/profile.component'\r\n\r\nconst systemRoutes: Routes = [\r\n  {\r\n  path: '',\r\n  component: FullComponent,\r\n  children: [\r\n    { path: \"branch\", component: BranchComponent },\r\n    { path: \"addbranch\", component: AddBranchComponent },\r\n    { path: \"dashboard\", component: DashboardComponent },\r\n    { path: \"profile\", component: ProfileComponent },\r\n    { path: \"products\", component: ProductComponent },\r\n    { path: \"addproduct\", component: AddProductComponent },\r\n    { path: \"statistics\", component: StatisticsComponent },\r\n    {\r\n      path: '',\r\n      redirectTo: 'dashboard',\r\n      pathMatch: 'full',\r\n    },\r\n  ]\r\n  }];\r\n \r\n@NgModule({\r\n  imports: [RouterModule.forChild(systemRoutes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class SystemRoutingModule {}\r\n","import { Component, OnInit, AfterViewInit, ViewChild } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n\r\n@Component({\r\n    selector: 'app-system',\r\n    templateUrl: './system.component.html',\r\n    styleUrls: ['./system.component.scss']\r\n  })\r\n\r\n\r\n  export class SystemComponent implements AfterViewInit {\r\n\r\n    constructor(\r\n        private router: Router\r\n        ){}\r\n    ngAfterViewInit(){\r\n\r\n    }\r\n  }","<router-outlet></router-outlet>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from \"@angular/router\";\r\n\r\nimport { SystemComponent } from \"./system.component\";\r\nimport { systemRoutes } from \"./system.routes\";\r\n\r\nimport { BranchComponent } from \"./branch/branch.component\";\r\nimport { AddBranchComponent } from \"./branch/add-branch/add-branch.component\";\r\nimport { DashboardComponent } from \"./dashboard/dashboard.component\";\r\nimport { ProductComponent } from \"./product/product.component\";\r\nimport { AddProductComponent } from \"./product/add-product/add-product.component\";\r\nimport { StatisticsComponent } from \"./statistics/statistics.component\";\r\nimport { ProfileComponent } from './profile/profile.component'\r\n\r\nimport { DemoMaterialModule } from '../demo-material-module';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { MatGoogleMapsAutocompleteModule } from '@angular-material-extensions/google-maps-autocomplete';\r\nimport { NgxMaterialTimepickerModule } from 'ngx-material-timepicker';\r\nimport { AgmCoreModule } from '@agm/core';\r\nimport { environment } from '../../environments/environment';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { SystemRoutingModule } from './system-routing.module';\r\nimport { SpinnerComponent } from './shared/spinner.component';\r\n\r\n\r\nimport { FullComponent } from './layouts/full/full.component';\r\nimport { AppHeaderComponent } from './layouts/full/header/header.component';\r\nimport { AppSidebarComponent } from './layouts/full/sidebar/sidebar.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    SystemComponent,\r\n    FullComponent,\r\n    BranchComponent,\r\n    AddBranchComponent,\r\n    DashboardComponent,\r\n    ProductComponent,\r\n    AddProductComponent,\r\n    StatisticsComponent,\r\n    AppHeaderComponent,\r\n    AppSidebarComponent,\r\n    ProfileComponent,\r\n    SpinnerComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    DemoMaterialModule,\r\n    FlexLayoutModule,\r\n    MatGoogleMapsAutocompleteModule,\r\n    NgxMaterialTimepickerModule.setLocale('es-419'),\r\n    AgmCoreModule.forRoot(environment.GOOGLE_MAPS_CONFIG),\r\n    FormsModule,\r\n    \r\n    //RouterModule.forChild(systemRoutes),\r\n    SystemRoutingModule\r\n  ],\r\n  exports: [\r\n    SpinnerComponent\r\n  ]\r\n})\r\nexport class SystemModule { }","import { CanActivate, Router,ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from \"@angular/router\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { LoginService } from '../public/login/login.service'\r\nimport { Observable } from 'rxjs';\r\n\r\n\r\n\r\n@Injectable()\r\nexport class AuthService implements CanActivate {\r\n  constructor(\r\n    public authService: LoginService,\r\n    public router: Router\r\n  ){ }\r\n\r\n\r\n  canActivate(): boolean | UrlTree {\r\n   \r\n    const token = localStorage.getItem('token');\r\n    const user = localStorage.getItem('user');\r\nconsole.log(this.router.url)\r\n    if (token && user) {\r\n        \r\n      return true;\r\n    } else {\r\n      return this.router.parseUrl(\"/public/login\");\r\n      //return true;\r\n    }\r\n  }\r\n}\r\n\r\n","import Swal from 'sweetalert2';\r\n\r\nexport class MySweetAlert {\r\n  static showError(message: string, title?: string) {\r\n    Swal.fire({\r\n      title: title ? title : 'Error',\r\n      text: message,\r\n      icon: 'error',\r\n      confirmButtonText: 'OK',\r\n      confirmButtonColor: '#fc4b6c'\r\n    });\r\n  }\r\n\r\n  static showSuccess(message: string, title?: string) {\r\n    Swal.fire({\r\n      title: title ? title : 'Correcto',\r\n      text: message,\r\n      icon: 'success',\r\n      confirmButtonText: 'Aceptar',\r\n      confirmButtonColor: '#26c6da'\r\n    });\r\n  }\r\n\r\n  static showWarning(message: string, title?: string) {\r\n    Swal.fire({\r\n      title: title ? title : 'Advertencia',\r\n      text: message,\r\n      icon: 'warning',\r\n      confirmButtonText: 'Aceptar',\r\n      cancelButtonText: 'Cancelar',\r\n      confirmButtonColor: '#ffb22b',\r\n      cancelButtonColor: '#fc4b6c'\r\n    });\r\n  }\r\n}\r\n","export { MySweetAlert } from './alert';","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  GOOGLE_MAPS_CONFIG: {\r\n    apiKey: 'AIzaSyAD2irnyqiMg9rTjc0PEYRN7rlXRKxENjA',\r\n    libraries: ['places'],\r\n    language: 'es'\r\n  },\r\n  FIREBASE_CONFIG: {\r\n    apiKey: 'AIzaSyB9BLy7TI0fRutI1TmiT_0sJjQhnIL5U_Q',\r\n    authDomain: 'pharmapp-dev.firebaseapp.com',\r\n    databaseURL: 'https://pharmapp-dev.firebaseio.com',\r\n    projectId: 'pharmapp-dev',\r\n    storageBucket: 'pharmapp-dev.appspot.com',\r\n    messagingSenderId: '601968913327',\r\n    appId: '1:601968913327:web:b1085287e850522e649d5a',\r\n    measurementId: 'G-3EL52RP9XD'\r\n  }\r\n};\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\nimport 'hammerjs';\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic()\r\n  .bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"]}